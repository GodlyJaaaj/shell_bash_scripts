#!/bin/bash

USAGE_NAME=$(basename $0)
if [ $# -eq 0 ]
then
	echo "Usage: $USAGE_NAME [project_name] [option]"
	echo "Options:"
	echo -e "\t-math: add -lm to the Makefile"
	echo -e "\t-ncurses: add -lncurses to the Makefile"
	echo -e "\t-csfml: add -lcsfml-graphics -lcsfml-window -lcsfml-system -lcsfml-audio -lcsfml-network to the Makefile"
	exit 1
fi

BIN=${1:-"default"}
MAKEFILEPARAMS=""
MAKEFILENAME=$(echo $BIN | sed 's/[[:punct:][:space:][:cntrl:]]/_/g')
INCLUDE=$(echo $BIN | sed 's/[[:punct:][:space:]]/_/g' | sed 's/[a-z]/\U&/g' | sed 's/$/_H_/')
mkdir include
mkdir src

#no param
function create_gitignore () {
	echo "*.out
*.txt
*.pdf
*.log
.vscode
.idea
vgcore.*" > .gitignore
}

#no param
function create_main () {
	echo "/*
** EPITECH PROJECT, 2022
** ----
** File description:
** main.c
*/

int main(int argc, char const *argv[])
{
    printf(\"Hello world\n\");
    return 0;
}" > src/main.c
}

#param 1: name of the makefile
#param 2: name of the include define
function create_include () {
	echo "/*
** EPITECH PROJECT, 2022
** ----
** File description:
** main.c
*/

#ifndef $1
    #define $1
#endif /*$1*/" > include/"$2".h
}

# param 1: name of the binary
# param 2: name of the makefile
function create_makefile () {
	echo "##
## EPITECH PROJECT, 2022
## -----
## File description:
## Makefile
##

rwildcard=\$(wildcard \$1\$2) \$(foreach d,\$(wildcard \$1*),\$(call rwildcard,\$d/,\$2))
SRC = \$(call rwildcard,src/,*.c)

OBJ = \$(SRC:.c=.o)

NAME = '$1'
CFLAGS := -I./include
all: \$(NAME)

\$(NAME): \$(OBJ)
	@gcc \$(SRC)$2\\
	 -Wall -Wno-unused-variable -Wno-unused-parameter\\
	 -Wextra -Iinclude \$(CFLAGS) -o \$(NAME)

clean:
	@rm -f \$(OBJ)

fclean: clean
	@rm -f \$(NAME)

re: fclean all

.PHONY: all clean fclean re" > "Makefile"
}

bool_math=false
bool_ncurses=false
bool_csfml=false

for i in "$@"
do
	case $i in
		-math)
			if [ $bool_math = false ]
			then
				MAKEFILEPARAMS+=" -lm"
				bool_math=true
			fi
			shift
			;;
		-ncurses)
			if [ $bool_ncurses = false ]
			then
				MAKEFILEPARAMS+=" -lncurses"
				bool_ncurses=true
			fi
			shift
			;;
		-csfml)
			if [ $bool_csfml = false ]
			then
				MAKEFILEPARAMS+=" -lcsfml-graphics -lcsfml-window\\
				 -lcsfml-system -lcsfml-audio -lcsfml-network"
				bool_csfml=true
			fi
			shift
			;;
		*)
			shift
			;;
	esac
done
#remove duplicate elements in MAKEFILEPARAMS
#MAKEFILEPARAMS=$(echo $MAKEFILEPARAMS | sed -r ':a; s/\b([[:alnum:]]+)\b(.*)\b\1\b/\1\2/g; ta; s/(, )+/, /g; s/, *$//')
#echo $MAKEFILEPARAMS
create_gitignore
create_main
create_include $INCLUDE $MAKEFILENAME
create_makefile $BIN "$MAKEFILEPARAMS"
